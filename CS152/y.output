Grammar

    0 $accept: program $end

    1 program: function

    2 function: %empty
    3         | funct function

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    5 declaration: %empty
    6            | declarate SEMICOLON declaration

    7 declarate: ident COLON array

    8 array: INTEGER
    9      | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 ident: IDENT
   11      | IDENT COMMA ident

   12 statement: state SEMICOLON
   13          | state SEMICOLON statement

   14 state: var ASSIGN expression
   15      | IF bool_expr THEN statement statement_end
   16      | WHILE bool_expr BEGINLOOP statement ENDLOOP
   17      | DO BEGINLOOP statement ENDLOOP WHILE bool_expr
   18      | FOREACH IDENT IN IDENT BEGINLOOP statement ENDLOOP
   19      | READ var_loop
   20      | WRITE var_loop
   21      | CONTINUE
   22      | RETURN expression

   23 statement_end: ENDIF
   24              | ELSE statement ENDIF

   25 bool_expr: relation_and_expr
   26          | relation_and_expr OR bool_expr

   27 relation_and_expr: relation_expr
   28                  | relation_expr AND relation_and_expr

   29 relation_expr: relation_expressions
   30              | NOT relation_expressions

   31 relation_expressions: expression comp expression
   32                     | TRUE
   33                     | FALSE
   34                     | L_PAREN bool_expr R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expression: multiplicative_expr
   42           | multiplicative_expr add_or_sub expression

   43 add_or_sub: ADD
   44           | SUB

   45 multiplicative_expr: term
   46                    | term mult_div_mod multiplicative_expr

   47 mult_div_mod: MULT
   48             | DIV
   49             | MOD

   50 term: term1
   51     | IDENT L_PAREN term2

   52 term1: SUB term1a
   53      | term1a

   54 term1a: var
   55       | NUMBER
   56       | L_PAREN expression R_PAREN

   57 term2: expression_loop R_PAREN
   58      | R_PAREN

   59 expression_loop: expression
   60                | expression COMMA expression_loop

   61 var: identifier
   62    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   63 identifier: IDENT

   64 var_loop: var COMMA
   65         | var COMMA var_loop


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 9 55
IDENT (259) 4 10 11 18 51 63
FUNCTION (260) 4
BEGINPARAMS (261) 4
ENDPARAMS (262) 4
BEGINLOCALS (263) 4
ENDLOCALS (264) 4
BEGINBODY (265) 4
ENDBODY (266) 4
INTEGER (267) 8 9
ARRAY (268) 9
OF (269) 9
IF (270) 15
THEN (271) 15
ENDIF (272) 23 24
ELSE (273) 24
WHILE (274) 16 17
DO (275) 17
FOREACH (276) 18
IN (277) 18
BEGINLOOP (278) 16 17 18
ENDLOOP (279) 16 17 18
CONTINUE (280) 21
READ (281) 19
WRITE (282) 20
AND (283) 28
OR (284) 26
NOT (285) 30
TRUE (286) 32
FALSE (287) 33
RETURN (288) 22
SEMICOLON (289) 4 6 12 13
COLON (290) 7
COMMA (291) 11 60 64 65
L_PAREN (292) 34 51 56
R_PAREN (293) 34 56 57 58
L_SQUARE_BRACKET (294) 9 62
R_SQUARE_BRACKET (295) 9 62
ASSIGN (296) 14
EQ (297) 35
NEQ (298) 36
LT (299) 37
GT (300) 38
LTE (301) 39
GTE (302) 40
ADD (303) 43
SUB (304) 44 52
MULT (305) 47
DIV (306) 48
MOD (307) 49


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
function (55)
    on left: 2 3, on right: 1 3
funct (56)
    on left: 4, on right: 3
declaration (57)
    on left: 5 6, on right: 4 6
declarate (58)
    on left: 7, on right: 6
array (59)
    on left: 8 9, on right: 7
ident (60)
    on left: 10 11, on right: 7 11
statement (61)
    on left: 12 13, on right: 4 13 15 16 17 18 24
state (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
statement_end (63)
    on left: 23 24, on right: 15
bool_expr (64)
    on left: 25 26, on right: 15 16 17 26 34
relation_and_expr (65)
    on left: 27 28, on right: 25 26 28
relation_expr (66)
    on left: 29 30, on right: 27 28
relation_expressions (67)
    on left: 31 32 33 34, on right: 29 30
comp (68)
    on left: 35 36 37 38 39 40, on right: 31
expression (69)
    on left: 41 42, on right: 14 22 31 42 56 59 60 62
add_or_sub (70)
    on left: 43 44, on right: 42
multiplicative_expr (71)
    on left: 45 46, on right: 41 42 46
mult_div_mod (72)
    on left: 47 48 49, on right: 46
term (73)
    on left: 50 51, on right: 45 46
term1 (74)
    on left: 52 53, on right: 50
term1a (75)
    on left: 54 55 56, on right: 52 53
term2 (76)
    on left: 57 58, on right: 51
expression_loop (77)
    on left: 59 60, on right: 57 60
var (78)
    on left: 61 62, on right: 14 54 64 65
identifier (79)
    on left: 63, on right: 61 62
var_loop (80)
    on left: 64 65, on right: 19 20 65


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function)

    program   go to state 2
    function  go to state 3
    funct     go to state 4


State 1

    4 funct: FUNCTION . IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function .

    $default  reduce using rule 1 (program)


State 4

    3 function: funct . function

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (function)

    function  go to state 7
    funct     go to state 4


State 5

    4 funct: FUNCTION IDENT . SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function: funct function .

    $default  reduce using rule 3 (function)


State 8

    4 funct: FUNCTION IDENT SEMICOLON . BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    BEGINPARAMS  shift, and go to state 9


State 9

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS . declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration)

    declaration  go to state 11
    declarate    go to state 12
    ident        go to state 13


State 10

   10 ident: IDENT .
   11      | IDENT . COMMA ident

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (ident)


State 11

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration . ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    ENDPARAMS  shift, and go to state 15


State 12

    6 declaration: declarate . SEMICOLON declaration

    SEMICOLON  shift, and go to state 16


State 13

    7 declarate: ident . COLON array

    COLON  shift, and go to state 17


State 14

   11 ident: IDENT COMMA . ident

    IDENT  shift, and go to state 10

    ident  go to state 18


State 15

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS . BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY

    BEGINLOCALS  shift, and go to state 19


State 16

    6 declaration: declarate SEMICOLON . declaration

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration)

    declaration  go to state 20
    declarate    go to state 12
    ident        go to state 13


State 17

    7 declarate: ident COLON . array

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    array  go to state 23


State 18

   11 ident: IDENT COMMA ident .

    $default  reduce using rule 11 (ident)


State 19

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS . declaration ENDLOCALS BEGINBODY statement ENDBODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration)

    declaration  go to state 24
    declarate    go to state 12
    ident        go to state 13


State 20

    6 declaration: declarate SEMICOLON declaration .

    $default  reduce using rule 6 (declaration)


State 21

    8 array: INTEGER .

    $default  reduce using rule 8 (array)


State 22

    9 array: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

    7 declarate: ident COLON array .

    $default  reduce using rule 7 (declarate)


State 24

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration . ENDLOCALS BEGINBODY statement ENDBODY

    ENDLOCALS  shift, and go to state 26


State 25

    9 array: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS . BEGINBODY statement ENDBODY

    BEGINBODY  shift, and go to state 28


State 27

    9 array: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY . statement ENDBODY

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement   go to state 39
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 29

    9 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 30

   63 identifier: IDENT .

    $default  reduce using rule 63 (identifier)


State 31

   15 state: IF . bool_expr THEN statement statement_end

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    bool_expr             go to state 51
    relation_and_expr     go to state 52
    relation_expr         go to state 53
    relation_expressions  go to state 54
    expression            go to state 55
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 32

   16 state: WHILE . bool_expr BEGINLOOP statement ENDLOOP

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    bool_expr             go to state 61
    relation_and_expr     go to state 52
    relation_expr         go to state 53
    relation_expressions  go to state 54
    expression            go to state 55
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 33

   17 state: DO . BEGINLOOP statement ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 62


State 34

   18 state: FOREACH . IDENT IN IDENT BEGINLOOP statement ENDLOOP

    IDENT  shift, and go to state 63


State 35

   21 state: CONTINUE .

    $default  reduce using rule 21 (state)


State 36

   19 state: READ . var_loop

    IDENT  shift, and go to state 30

    var         go to state 64
    identifier  go to state 42
    var_loop    go to state 65


State 37

   20 state: WRITE . var_loop

    IDENT  shift, and go to state 30

    var         go to state 64
    identifier  go to state 42
    var_loop    go to state 66


State 38

   22 state: RETURN . expression

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 68
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 39

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement . ENDBODY

    ENDBODY  shift, and go to state 69


State 40

   12 statement: state . SEMICOLON
   13          | state . SEMICOLON statement

    SEMICOLON  shift, and go to state 70


State 41

   14 state: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 42

   61 var: identifier .
   62    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 61 (var)


State 43

    9 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 44

   55 term1a: NUMBER .

    $default  reduce using rule 55 (term1a)


State 45

   51 term: IDENT . L_PAREN term2
   63 identifier: IDENT .

    L_PAREN  shift, and go to state 74

    $default  reduce using rule 63 (identifier)


State 46

   30 relation_expr: NOT . relation_expressions

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    relation_expressions  go to state 75
    expression            go to state 55
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 47

   32 relation_expressions: TRUE .

    $default  reduce using rule 32 (relation_expressions)


State 48

   33 relation_expressions: FALSE .

    $default  reduce using rule 33 (relation_expressions)


State 49

   34 relation_expressions: L_PAREN . bool_expr R_PAREN
   56 term1a: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    bool_expr             go to state 76
    relation_and_expr     go to state 52
    relation_expr         go to state 53
    relation_expressions  go to state 54
    expression            go to state 77
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 50

   52 term1: SUB . term1a

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 30
    L_PAREN  shift, and go to state 67

    term1a      go to state 78
    var         go to state 60
    identifier  go to state 42


State 51

   15 state: IF bool_expr . THEN statement statement_end

    THEN  shift, and go to state 79


State 52

   25 bool_expr: relation_and_expr .
   26          | relation_and_expr . OR bool_expr

    OR  shift, and go to state 80

    $default  reduce using rule 25 (bool_expr)


State 53

   27 relation_and_expr: relation_expr .
   28                  | relation_expr . AND relation_and_expr

    AND  shift, and go to state 81

    $default  reduce using rule 27 (relation_and_expr)


State 54

   29 relation_expr: relation_expressions .

    $default  reduce using rule 29 (relation_expr)


State 55

   31 relation_expressions: expression . comp expression

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 88


State 56

   41 expression: multiplicative_expr .
   42           | multiplicative_expr . add_or_sub expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 41 (expression)

    add_or_sub  go to state 91


State 57

   45 multiplicative_expr: term .
   46                    | term . mult_div_mod multiplicative_expr

    MULT  shift, and go to state 92
    DIV   shift, and go to state 93
    MOD   shift, and go to state 94

    $default  reduce using rule 45 (multiplicative_expr)

    mult_div_mod  go to state 95


State 58

   50 term: term1 .

    $default  reduce using rule 50 (term)


State 59

   53 term1: term1a .

    $default  reduce using rule 53 (term1)


State 60

   54 term1a: var .

    $default  reduce using rule 54 (term1a)


State 61

   16 state: WHILE bool_expr . BEGINLOOP statement ENDLOOP

    BEGINLOOP  shift, and go to state 96


State 62

   17 state: DO BEGINLOOP . statement ENDLOOP WHILE bool_expr

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement   go to state 97
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 63

   18 state: FOREACH IDENT . IN IDENT BEGINLOOP statement ENDLOOP

    IN  shift, and go to state 98


State 64

   64 var_loop: var . COMMA
   65         | var . COMMA var_loop

    COMMA  shift, and go to state 99


State 65

   19 state: READ var_loop .

    $default  reduce using rule 19 (state)


State 66

   20 state: WRITE var_loop .

    $default  reduce using rule 20 (state)


State 67

   56 term1a: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 100
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 68

   22 state: RETURN expression .

    $default  reduce using rule 22 (state)


State 69

    4 funct: FUNCTION IDENT SEMICOLON BEGINPARAMS declaration ENDPARAMS BEGINLOCALS declaration ENDLOCALS BEGINBODY statement ENDBODY .

    $default  reduce using rule 4 (funct)


State 70

   12 statement: state SEMICOLON .
   13          | state SEMICOLON . statement

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    $default  reduce using rule 12 (statement)

    statement   go to state 101
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 71

   14 state: var ASSIGN . expression

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 102
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 72

   62 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 103
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 73

    9 array: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (array)


State 74

   51 term: IDENT L_PAREN . term2

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    R_PAREN  shift, and go to state 104
    SUB      shift, and go to state 50

    expression           go to state 105
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    term2                go to state 106
    expression_loop      go to state 107
    var                  go to state 60
    identifier           go to state 42


State 75

   30 relation_expr: NOT relation_expressions .

    $default  reduce using rule 30 (relation_expr)


State 76

   34 relation_expressions: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 108


State 77

   31 relation_expressions: expression . comp expression
   56 term1a: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 109
    EQ       shift, and go to state 82
    NEQ      shift, and go to state 83
    LT       shift, and go to state 84
    GT       shift, and go to state 85
    LTE      shift, and go to state 86
    GTE      shift, and go to state 87

    comp  go to state 88


State 78

   52 term1: SUB term1a .

    $default  reduce using rule 52 (term1)


State 79

   15 state: IF bool_expr THEN . statement statement_end

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement   go to state 110
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 80

   26 bool_expr: relation_and_expr OR . bool_expr

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    bool_expr             go to state 111
    relation_and_expr     go to state 52
    relation_expr         go to state 53
    relation_expressions  go to state 54
    expression            go to state 55
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 81

   28 relation_and_expr: relation_expr AND . relation_and_expr

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    relation_and_expr     go to state 112
    relation_expr         go to state 53
    relation_expressions  go to state 54
    expression            go to state 55
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 82

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 83

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 84

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 85

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 86

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 87

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 88

   31 relation_expressions: expression comp . expression

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 113
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 89

   43 add_or_sub: ADD .

    $default  reduce using rule 43 (add_or_sub)


State 90

   44 add_or_sub: SUB .

    $default  reduce using rule 44 (add_or_sub)


State 91

   42 expression: multiplicative_expr add_or_sub . expression

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 114
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 92

   47 mult_div_mod: MULT .

    $default  reduce using rule 47 (mult_div_mod)


State 93

   48 mult_div_mod: DIV .

    $default  reduce using rule 48 (mult_div_mod)


State 94

   49 mult_div_mod: MOD .

    $default  reduce using rule 49 (mult_div_mod)


State 95

   46 multiplicative_expr: term mult_div_mod . multiplicative_expr

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    multiplicative_expr  go to state 115
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    var                  go to state 60
    identifier           go to state 42


State 96

   16 state: WHILE bool_expr BEGINLOOP . statement ENDLOOP

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement   go to state 116
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 97

   17 state: DO BEGINLOOP statement . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 117


State 98

   18 state: FOREACH IDENT IN . IDENT BEGINLOOP statement ENDLOOP

    IDENT  shift, and go to state 118


State 99

   64 var_loop: var COMMA .
   65         | var COMMA . var_loop

    IDENT  shift, and go to state 30

    $default  reduce using rule 64 (var_loop)

    var         go to state 64
    identifier  go to state 42
    var_loop    go to state 119


State 100

   56 term1a: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 109


State 101

   13 statement: state SEMICOLON statement .

    $default  reduce using rule 13 (statement)


State 102

   14 state: var ASSIGN expression .

    $default  reduce using rule 14 (state)


State 103

   62 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 120


State 104

   58 term2: R_PAREN .

    $default  reduce using rule 58 (term2)


State 105

   59 expression_loop: expression .
   60                | expression . COMMA expression_loop

    COMMA  shift, and go to state 121

    $default  reduce using rule 59 (expression_loop)


State 106

   51 term: IDENT L_PAREN term2 .

    $default  reduce using rule 51 (term)


State 107

   57 term2: expression_loop . R_PAREN

    R_PAREN  shift, and go to state 122


State 108

   34 relation_expressions: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 34 (relation_expressions)


State 109

   56 term1a: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (term1a)


State 110

   15 state: IF bool_expr THEN statement . statement_end

    ENDIF  shift, and go to state 123
    ELSE   shift, and go to state 124

    statement_end  go to state 125


State 111

   26 bool_expr: relation_and_expr OR bool_expr .

    $default  reduce using rule 26 (bool_expr)


State 112

   28 relation_and_expr: relation_expr AND relation_and_expr .

    $default  reduce using rule 28 (relation_and_expr)


State 113

   31 relation_expressions: expression comp expression .

    $default  reduce using rule 31 (relation_expressions)


State 114

   42 expression: multiplicative_expr add_or_sub expression .

    $default  reduce using rule 42 (expression)


State 115

   46 multiplicative_expr: term mult_div_mod multiplicative_expr .

    $default  reduce using rule 46 (multiplicative_expr)


State 116

   16 state: WHILE bool_expr BEGINLOOP statement . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 117

   17 state: DO BEGINLOOP statement ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 127


State 118

   18 state: FOREACH IDENT IN IDENT . BEGINLOOP statement ENDLOOP

    BEGINLOOP  shift, and go to state 128


State 119

   65 var_loop: var COMMA var_loop .

    $default  reduce using rule 65 (var_loop)


State 120

   62 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


State 121

   60 expression_loop: expression COMMA . expression_loop

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 67
    SUB      shift, and go to state 50

    expression           go to state 105
    multiplicative_expr  go to state 56
    term                 go to state 57
    term1                go to state 58
    term1a               go to state 59
    expression_loop      go to state 129
    var                  go to state 60
    identifier           go to state 42


State 122

   57 term2: expression_loop R_PAREN .

    $default  reduce using rule 57 (term2)


State 123

   23 statement_end: ENDIF .

    $default  reduce using rule 23 (statement_end)


State 124

   24 statement_end: ELSE . statement ENDIF

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement   go to state 130
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 125

   15 state: IF bool_expr THEN statement statement_end .

    $default  reduce using rule 15 (state)


State 126

   16 state: WHILE bool_expr BEGINLOOP statement ENDLOOP .

    $default  reduce using rule 16 (state)


State 127

   17 state: DO BEGINLOOP statement ENDLOOP WHILE . bool_expr

    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 45
    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50

    bool_expr             go to state 131
    relation_and_expr     go to state 52
    relation_expr         go to state 53
    relation_expressions  go to state 54
    expression            go to state 55
    multiplicative_expr   go to state 56
    term                  go to state 57
    term1                 go to state 58
    term1a                go to state 59
    var                   go to state 60
    identifier            go to state 42


State 128

   18 state: FOREACH IDENT IN IDENT BEGINLOOP . statement ENDLOOP

    IDENT     shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    FOREACH   shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38

    statement   go to state 132
    state       go to state 40
    var         go to state 41
    identifier  go to state 42


State 129

   60 expression_loop: expression COMMA expression_loop .

    $default  reduce using rule 60 (expression_loop)


State 130

   24 statement_end: ELSE statement . ENDIF

    ENDIF  shift, and go to state 133


State 131

   17 state: DO BEGINLOOP statement ENDLOOP WHILE bool_expr .

    $default  reduce using rule 17 (state)


State 132

   18 state: FOREACH IDENT IN IDENT BEGINLOOP statement . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 133

   24 statement_end: ELSE statement ENDIF .

    $default  reduce using rule 24 (statement_end)


State 134

   18 state: FOREACH IDENT IN IDENT BEGINLOOP statement ENDLOOP .

    $default  reduce using rule 18 (state)
